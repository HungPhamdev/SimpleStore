@page "/cart"
@using System.Net;
@using ASM.Share.Models;
@layout WebLayout;
@inject NavigationManager navigation
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject IJSRuntime JSRuntime

<style>
    .viewProduct, .addProduct {
        border: 0;
        font-weight: 700;
        padding: 9px 5px;
        background: #ffd800;
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
        display: block;
        width: 186px;
        margin: 0 auto;
        color: #0e0e0e;
        text-align: center;
    }
</style>

<h1 class="h1 text-info font-weight-bold"><i class="fas fa-shopping-cart"></i> Giỏ hàng</h1>

<table class="table table-hover">
    <tr>
        <th>Món ăn</th>
        <th>Hình ảnh</th>
        <th>Số lượng</th>
        <th>Giá</th>
        <th>Tổng cộng</th>
        <th></th>
    </tr>
    @{
        @foreach (var item in giohang.ListViewCart)
        {
            @if (item != null)
            {
                //id = "tr_@item.MonAn.MonAnID"
                <tr>
                    <td>@item.MonAn.Name</td>
                    <td><img src="@(imgUrl + item.MonAn.Hinh)" style="width:150px" /></td>
                    <td>
                        <input type="number" id="txtQuantity_@item.MonAn.MonAnID"
                               @oninput="(e) => item.Quantity = int.Parse(e.Value.ToString())"
                               @onchange="() => UpdateCart(item)" value="@item.Quantity" min="1" />
                    </td>
                    <td id="tdGia_@item.MonAn.MonAnID">@item.MonAn.Gia</td>
                    <td id="tdTien_@item.MonAn.MonAnID">@item.Sotien</td>
                    <td>
                        <a href="javascript:return false;" onmouseup="delCart(@item.MonAn.MonAnID)"
                           @onclick="() => DeleteCart(item)"><i class="fas fa-trash-alt text-danger"></i></a>
                    </td>
                </tr>
            }
        }
    }
</table>
<p>
    <div><b>Tổng tiền: <span id="spTotal">@giohang.Tongtien</span> VNĐ</b></div>
</p
<p>
    @if (@emailAddress != null && @emailAddress != "")
    {
        <button class="btn btn-danger btn-lg font-weight-bold" @onclick="OrderCart"><i class="fas fa-paper-plane"></i> Đặt hàng</button>
    }
    else
    {
        <span class="alert alert-danger font-weight-bold">Bạn cần đăng nhập để đặt hàng!</span>
    }
    <br /><br />
    <a href="/" class="btn btn-primary font-weight-bold" style="text-decoration:none;"><i class="fas fa-arrow-circle-left"></i> Tiếp tục mua hàng</a>
</p>

@code {
    private string emailAddress;
    public ASM.Share.Models.Cart giohang;
    private double total = 0;
    protected string imgUrl = "";
    protected string temp = "";

    protected override async Task OnInitializedAsync()
    {
        emailAddress = sessionStorage.GetItem<string>("Email"); // get key cart
        var cart = sessionStorage.GetItem<string>("cart"); // get key cart

        if (cart == null)
        {
            giohang = new ASM.Share.Models.Cart();
        }
        else
        {
            giohang = JsonConvert.DeserializeObject<ASM.Share.Models.Cart>(cart);
        }
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
    }

    private void UpdateCart(CartItem item)
    {
        item.Sotien = item.Quantity * item.MonAn.Gia;
        giohang.Tongtien = Tinhtien(giohang.ListViewCart);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
    }

    private void DeleteCart(CartItem item)
    {
        giohang.ListViewCart.Remove(item);
        giohang.Tongtien = Tinhtien(giohang.ListViewCart);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
    }

    private async Task OrderCart()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<int>("KhachhangId");

        giohang.KhanghangId = khachhangId;

        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(giohang), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "Cart", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {
                //error += (error == "" ? "" : "<br/>" + " - Lỗi khi gọi API");
                //xu ly loi
                //return Content(response.ToString());
            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else
                {
                    sessionStorage.RemoveItem("cart");
                    await JSRuntime.InvokeAsync<object>("clearCart", "");
                    navigation.NavigateTo("/history");
                }
            }
        }
    }

    private double Tinhtien(List<CartItem> listCart)
    {
        double tongTien = 0;
        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                tongTien += listCart[i].Sotien;
            }
        }
        return tongTien;
    }
}
